extends ../../layout.pug

block body
  .col-12
    .row
      .mb-4.col-12.col-xl-6
        .card.bg-primary
          .card-body.smallstat
            div
              div
                img(src=cards.guild.iconURL, width='50px')
              div
                h6 Server name
                h5 #{cards.guild.name}
      .mb-4.col-12.col-md-6.col-xl-3
        .card.bg-primary
          .card-body.smallstat
            div
              div
                a(href=`member/${cards.owner.id}`)
                  img(src=cards.owner.avatarURL, width='50px')
              div
                h6 Owner name
                a(href=`member/${cards.owner.id}`)
                  h5 #{cards.owner.name}
      .mb-4.col-12.col-md-6.col-xl-3
        .card.bg-primary
          .card-body.smallstat
            div
              div
                i.fas.fa-globe.fa-3x
              div
                h6 Region
                h5 #{cards.guild.region}

    .row
      .mb-4.col-12.col-sm-6.col-xl-3
        .card.bg-primary
          .card-body.smallstat
            div
              div
                i.fas.fa-users.fa-3x
              div
                h6 Total members
                h5 #{cards.totalMembers}
      .mb-4.col-12.col-sm-6.col-xl-3
        .card.bg-primary
          .card-body.smallstat
            div
              div
                i.fas.fa-user.fa-3x
              div
                h6 Members online
                h5 #{cards.onlineMembers}
      .mb-4.col-12.col-sm-6.col-xl-3
        .card.bg-primary
          .card-body.smallstat
            div
              div
                i.fas.fa-user-plus.fa-3x
              div
                h6 Members joined / left
                h5 #{cards.membersJoined} / #{cards.membersLeft}
      .mb-4.col-12.col-sm-6.col-xl-3
        .card.bg-primary
          .card-body.smallstat
            div
              div
                i.fas.fa-envelope.fa-3x
              div
                h6 New messages
                h5 #{cards.totalMessages}
    .row
      .mb-4.col-12.col-xl-6
        .card
          .card-header
            | Messages over time
          .card-body
            div#messageGraph(style='height:200px')
      .mb-4.col-12.col-xl-6
        .card
          .card-header
            | Channel message count distribution
          .card-body
            div#channelBars(style='height:200px')

    .row
      .mb-4.col-12.col-xl-6
        .card
          .card-header
            | Member count
          .card-body
            div#memberCountGraph(style='height:200px')
      .mb-4.col-12.col-xl-6
        .card
          .card-header
            | Member delta over time
          .card-body
            div#memberdeltaGraph(style='height:200px')

    .card.mb-4
      .card-header
        | Per-member server statistics (max 100)
      .card-body
        table.table#table
          thead
            tr
              th Tag
              th # Messages
              th # Words
              th # Characters
              th # Mentioned users
              th # Attachments
              th Last message

          tbody
            each row in userStatsTable
              tr
                td
                  a(href=`member/${row.id}`)
                    img(src=row.avatarURL, width='20px')
                    | #{row.tag}
                td= row.count
                td= row.word_count
                td= row.char_count
                td= row.user_mention_count
                td= row.attachment_count
                td(data-sort=row.last_message)= row.last_message_formatted

block scripts
  script.
    const messageGraph = !{diagrams.messageGraph};

    for (const row of messageGraph) {
      row.y = parseInt(row.y);
    }

    Highcharts.chart('messageGraph', {
      chart: {
        type: 'areaspline',
        backgroundColor: 'rgba(255, 255, 255, 0.0)'
      },
      series: [{
        name: 'Messages',
        data: messageGraph,
        fillColor: '#183d61'
      }],
      title: {
        text: ''
      },
      credits: {
        enabled: false
      },
      legend: {
        enabled: false
      },
      xAxis: {
        type: 'datetime',
        labels: {
          formatter: function () {
            if (messageGraph[this.value]) {
              return messageGraph[this.value].name;
            }
          },
          style: {
            color: '#c3bfb6',
          }
        },
      },
      yAxis: {
        title: false,
        labels: {
          style: {
            color: '#c3bfb6',
          }
        }
      },
      plotOptions: {
        areaspline: {
          marker: {
            enabled: false,
          }
        }
      }
    });

    const channelMessageBars = !{diagrams.channelMessageBars};

    for (const row of channelMessageBars) {
      row.y = parseInt(row.y);
    }

    Highcharts.chart('channelBars', {
      chart: {
        type: 'column',
        backgroundColor: 'rgba(255, 255, 255, 0.0)'
      },
      series: [{
        name: 'Messages',
        data: channelMessageBars,
        color: '#104271'
      }],
      title: {
        text: ''
      },
      credits: {
        enabled: false
      },
      legend: {
        enabled: false
      },
      xAxis: {
        labels: {
          formatter: function () {
            return channelMessageBars[this.value].name;
          },
          style: {
            color: '#c3bfb6',
          }
        },
        style: {
          color: '#c3bfb6',
        }
      },
      yAxis: {
        title: false,
        labels: {
          style: {
            color: '#c3bfb6',
          }
        }
      },
    });

    const memberDeltaGraph = !{diagrams.memberDeltaGraph};

    for (const row of memberDeltaGraph) {
      row.y = parseInt(row.y);
    }

    Highcharts.chart('memberdeltaGraph', {
      chart: {
        type: 'areaspline',
        backgroundColor: 'rgba(255, 255, 255, 0.0)'
      },
      series: [{
        name: 'delta',
        data: memberDeltaGraph,
        zoneAxis: 'y',
        zones: [{
          value: -0.1,
          color: '#ff3333',
          fillColor: '#a40c0d'
        }, {
          value: 0.1,
          color: '#7cb5ec',
        }, {
          color: '#33ff33',
          fillColor: '#0ca50d',
        }]
      }],
      title: {
        text: ''
      },
      credits: {
        enabled: false
      },
      legend: {
        enabled: false
      },
      xAxis: {
        type: 'datetime',
        labels: {
          formatter: function () {
            if (messageGraph[this.value]) {
              return messageGraph[this.value].name;
            }
          },
          style: {
            color: '#c3bfb6',
          }
        },
      },
      yAxis: {
        title: false,
        labels: {
          style: {
            color: '#c3bfb6',
          }
        }
      },
      plotOptions: {
        areaspline: {
          marker: {
            enabled: false,
          }
        }
      }
    });

    const memberCountGraph = !{diagrams.memberCountGraph};

    const onlineMemberSeries = [];
    const totalMemberSeries = [];

    for (const row of memberCountGraph) {
      onlineMemberSeries.push({
        y: parseInt(row.members_online),
        name: row.name,
      });

      totalMemberSeries.push({
        y: parseInt(row.members_total),
        name: row.name,
      });
    }

    Highcharts.chart('memberCountGraph', {
      chart: {
        type: 'areaspline',
        backgroundColor: 'rgba(255, 255, 255, 0.0)'
      },
      series: [{
        name: 'Total members',
        data: totalMemberSeries,
        fillColor: '#183d61'
      }, {
        name: 'Online members',
        data: onlineMemberSeries,
        color: '#cfcbc4',
        fillColor: '#34404b'
      }],
      title: {
        text: ''
      },
      credits: {
        enabled: false
      },
      legend: {
        enabled: false
      },
      xAxis: {
        type: 'datetime',
        labels: {
          formatter: function () {
            if (onlineMemberSeries[this.value]) {
              return onlineMemberSeries[this.value].name;
            }
          },
          style: {
            color: '#c3bfb6',
          }
        },
      },
      yAxis: {
        title: false,
        labels: {
          style: {
            color: '#c3bfb6',
          }
        }
      },
      plotOptions: {
        areaspline: {
          marker: {
            enabled: false,
          }
        }
      }
    });

    $(document).ready(function () {
      $('#table').DataTable({
        pageLength: 100,
        aaSorting: [[1, 'desc']],
        bPaginate: false,
        bFilter: false,
        bInfo: false,
      });
    });
